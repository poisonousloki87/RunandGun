#version 330 core
//vertex shader has 15 min in variable slots, so we have to say which slot each
//variable is to use
layout (location = 0) in vec3 aPos; //in variables are passed into this shader
layout (location = 1) in vec3 aColour;
layout (location = 2) in vec2 aTexCoord;//texture coordinate associated with this position

out vec3 vertexColour;
out vec2 TexCoord;

uniform mat4 model;//matrix for doing stuff with the model within the world
uniform mat4 view;//world space to viewspace
uniform mat4 projection;//setup perspective

void main(){
	//NOTE: matrix multiplication goes RIGHT to LEFT
	gl_Position = projection * view * model * vec4(aPos, 1.0);//vec4(aPos.x, aPos.y, aPos.z, 1.0);

	vertexColour = aColour;
	TexCoord = aTexCoord; //pass it onto the fragment shader :D
}

