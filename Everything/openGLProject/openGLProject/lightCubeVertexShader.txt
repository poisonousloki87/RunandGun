#version 330 core

layout (location = 0) in vec3 aPos;
layout (location = 1) in vec2 aTexCoord;
layout (location = 2) in vec3 aNormal;


out vec2 TexCoord;
out vec3 Normal;
out vec3 FragPos;	

uniform mat4 model;
uniform mat4 view; 
uniform mat4 projection;



void main(){
	//NOTE: matrix multiplication goes RIGHT to LEFT
	gl_Position = projection*view*model*vec4(aPos, 1.0);
	
	
	
	TexCoord = aTexCoord; 
	//NOTE: inversing matrixes is expensive 
	//where possible, dont do in gpu use cpu
	Normal = mat3(transpose(inverse(model))) * aNormal;
	//to help with lighting
	FragPos = vec3(model*vec4(aPos, 1.0));
}

